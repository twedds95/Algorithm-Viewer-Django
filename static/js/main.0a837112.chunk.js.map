{"version":3,"sources":["navigationBar.js","home.js","SortingAlgorithms/mergeSort.js","SortingAlgorithms/quickSort.js","Animations/sortingAnimations.js","SortingAlgorithms/selectionSort.js","SortingAlgorithms/insertionSort.js","SortingAlgorithms/beadSort.js","PathFindingAlgorithms/aStar.js","Animations/pathFindingAnimations.js","FourierTransforms/drawingArea.js","FourierTransforms/fourierTransform.js","FourierTransforms/fourierTransformDrawings.js","RocketGenerations/Rocket.js","RocketGenerations/SmartRockets.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","Navbar","expand","fluid","Collapse","Nav","to","React","Component","Home","getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","action","indOne","indTwo","heightOne","doMerge","getQuickSortAnimations","quickSortHelper","pivot","heightTwo","swap","splitForQuick","temp","NUMBER_OF_ARRAY_BARS","window","innerWidth","MAX_HEIGHT","innerHeight","SORTING_ALGORITHMS","SortingVisualizer","props","state","this","initArray","min","max","random","setState","location","reload","document","getElementById","value","maxIndex","selectionSortHelper","getselectionSortAnimations","key","sortHelper","getInsertionSortAnimations","animateBeads","BEAD","x","y","ind","h","isLowest","forEach","m","beadSortHelper","getBeadSortAnimations","arrayBars","getElementsByClassName","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","setTimeout","backgroundColor","height","select","onClick","resetArray","className","id","createSelection","animateSorting","map","idx","getA_StarAnimations","squares","start","filter","ele","isA","end","gScore","fScore","heuristic","openSet","previous","current","oldPath","newPath","old","newTop","commonElements","includes","square","rebuildPath","unshift","findLastCommonPoint","neighbours","neighbour","possibilities","tempScore","weight","failure","pathHelper","position","x1","y1","x2","y2","sqrt","NUMBER_OF_BOXES_WIDTH","NUMBER_OF_BOXES_HEIGHT","ALGORITHMS","PathFindingVisualizer","grid","resetGrid","gridSquareID","gridSquareStyle","color","top","left","width","margin","resetPath","animatePath","g","renderTheGrid","DrawArea","lines","Immutable","List","isDrawing","handleMouseDown","bind","handleMouseMove","handleMouseUp","addEventListener","removeEventListener","mouseEvent","button","point","relativeCoordinatesForEvent","prevState","updateIn","size","line","boundingRect","refs","drawArea","getBoundingClientRect","Map","clientX","clientY","ref","onMouseDown","onMouseMove","Drawing","index","DrawingLine","pathData","p","get","join","d","dft","X","N","re","im","n","phi","PI","cos","sin","freq","amp","phase","atan2","WIDTH","X_OFFSET","FourierDrawings","drawRef","createRef","drawing","startFourier","Fourier","resetDrawing","HEIGHT","stroke","strokeWidth","fill","renderFourier","getDrawing","path","frame","time","dt","FY","svgRender","epiCyclesX","epiCycles","FX","epiCyclesY","cycles","rotation","fourier","prevX","prevY","radius","cx","cy","r","_tail","_root","root","entries","points","fourierX","fourierY","sort","a","b","Rocket","startingY","dnaSize","dna","START_Y","pos","velocity","acceleration","strength","crashed","landed","lastFrame","randomGene","applyForce","makeChild","otherRocket","newDNA","updatePosition","obstacles","bounds","o","finish","right","bottom","multiplier","distanceX","distanceY","SmartRockets","rockets","population","generation","randomizeObstacles","launchRockets","stuff","obs","rx","ry","percent","percentDif","xmlns","transform","reset","renderStuff","getCurrentGeneration","updateGeneration","matingPool","maxStrength","s","newRockets","parents","App","exact","component","Boolean","hostname","match","ReactDOM","render","basename","process","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0a837112.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './App.css';\r\nimport {Link} from 'react-router-dom';\r\nimport { Nav, Navbar } from 'react-bootstrap/';\r\n\r\nexport default class NavBar extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar expand=\"lg\" fluid={true}>\r\n                    <Navbar.Collapse>\r\n                        <Nav>\r\n                            <Link to='/'>Home</Link>\r\n                            <Link to='/sortingVisualization'>Sorting Algorithms Visualization</Link>\r\n                            <Link to='/pathFindingVisualization'>Path Finding Visualization</Link>\r\n                            <Link to='/fourierTransformDrawings'>Fourier Transform Drawings</Link>\r\n                            <Link to='/generationSmartRockets'>Smart Rockets</Link>\r\n\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar >\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\nimport './App.css';\r\n\r\nexport default class Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Algorithm Viewer Project</h1>\r\n\r\n                <p>React app to visualize different algorithms, and other fun projects.</p>\r\n                <p>This project started off as just a visualization of sorting algorithms, but now takes on any other personal project or challenge I code.</p>\r\n                <h2>List of Challenges Completed:</h2>\r\n\r\n                <h3>Sorting Visualizations</h3>\r\n                <div>- Merge Sort</div>\r\n                <div>- Quick Sort</div>\r\n                <div>- Selection Sort</div>\r\n                <div>- Insertion Sort</div>\r\n                <div>- Bead Sort (Gravity Sort)</div>\r\n\r\n                <h3>Path Finding Visualization with A*</h3>\r\n                <h3>Fourier Transform Visualization</h3>\r\n                <p>Draw anything and have it drawn back to your using Fourier Transorms to define every continuous line.</p>\r\n                <h3>Smart Rockets (Evolutionary Algorithm)</h3>\r\n                <p>Rockets that evolve from generation to generation as they try to make it to their landing zone without crashing.</p>\r\n            </div>\r\n        );\r\n    }\r\n}","export function getMergeSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    const auxiliaryArray = array.slice();\r\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\r\n    return animations;\r\n}\r\n\r\nfunction mergeSortHelper(\r\n    mainArray,\r\n    startIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n) {\r\n    if (startIdx === endIdx) return;\r\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\r\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\r\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\r\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\r\n}\r\n\r\nfunction doMerge(\r\n    mainArray,\r\n    startIdx,\r\n    middleIdx,\r\n    endIdx,\r\n    auxiliaryArray,\r\n    animations,\r\n) {\r\n    let k = startIdx;\r\n    let i = startIdx;\r\n    let j = middleIdx + 1;\r\n    while (i <= middleIdx && j <= endIdx) {\r\n        // These are the values that we're comparing; we push them once\r\n        // to change their color.\r\n        animations.push({action: 'compare', indOne: i, indTwo: j});\r\n        // These are the values that we're comparing; we push them a second\r\n        // time to revert their color.\r\n        animations.push({action: 'normal', indOne: i, indTwo: j});\r\n        if (auxiliaryArray[i] <= auxiliaryArray[j]) {\r\n            // We overwrite the value at index k in the original array with the\r\n            // value at index i in the auxiliary array.\r\n            animations.push({action: 'newHeight', indOne: k, heightOne: auxiliaryArray[i]});\r\n            mainArray[k++] = auxiliaryArray[i++];\r\n        } else {\r\n            // We overwrite the value at index k in the original array with the\r\n            // value at index j in the auxiliary array.\r\n            animations.push({action: 'newHeight', indOne: k, heightOne: auxiliaryArray[j]});\r\n            mainArray[k++] = auxiliaryArray[j++];\r\n        }\r\n    }\r\n    while (i <= middleIdx) {\r\n        // We overwrite the value at index k in the original array with the\r\n        // value at index i in the auxiliary array.\r\n        animations.push({action: 'newHeight', indOne: k, heightOne: auxiliaryArray[i]});\r\n        mainArray[k++] = auxiliaryArray[i++];\r\n    }\r\n    while (j <= endIdx) {\r\n        // We overwrite the value at index k in the original array with the\r\n        // value at index j in the auxiliary array.\r\n        animations.push({action: 'newHeight', indOne: k, heightOne: auxiliaryArray[j]});\r\n        mainArray[k++] = auxiliaryArray[j++];\r\n    }\r\n}","export function getQuickSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    quickSortHelper(array, 0, array.length - 1, animations);\r\n    return animations;\r\n}\r\n\r\nfunction quickSortHelper(\r\n    mainArray,\r\n    startIdx,\r\n    endIdx,\r\n    animations,\r\n) {\r\n    if (startIdx >= endIdx) return;\r\n    let pivot = splitForQuick(mainArray, startIdx, endIdx, animations);\r\n    quickSortHelper(mainArray, startIdx, pivot - 1, animations);\r\n    quickSortHelper(mainArray, pivot + 1, endIdx, animations);\r\n}\r\n\r\nfunction swap(mainArray, i, j) {\r\n    let temp = mainArray[i];\r\n    mainArray[i] = mainArray[j];\r\n    mainArray[j] = temp\r\n}\r\n\r\nfunction splitForQuick(\r\n    mainArray,\r\n    startIdx,\r\n    endIdx,\r\n    animations,\r\n) {\r\n    let k = mainArray[startIdx];\r\n    let j = startIdx + 1;\r\n    for (let i = startIdx + 1; i <= endIdx; i++) {\r\n        animations.push({action: 'compare', indOne: i, indTwo: j});\r\n        animations.push({action: 'normal', indOne: i, indTwo: j});\r\n        if (mainArray[i] < k) {\r\n            animations.push({action: 'swap', indOne: i, indTwo: j, heightOne: mainArray[j], heightTwo: mainArray[i]});\r\n            swap(mainArray, i, j);\r\n            j++;\r\n        }\r\n    }\r\n    animations.push({action: 'compare', indOne: j - 1, indTwo: startIdx});\r\n    animations.push({action: 'normal', indOne: j - 1, indTwo: startIdx});\r\n    animations.push({\r\n        action: 'swap',\r\n        indOne: j - 1,\r\n        indTwo: startIdx,\r\n        heightOne: mainArray[startIdx],\r\n        heightTwo: mainArray[j - 1]\r\n    })\r\n    swap(mainArray, j - 1, startIdx);\r\n    return j - 1;\r\n}","import {getMergeSortAnimations} from '../SortingAlgorithms/mergeSort.js';\r\nimport {getQuickSortAnimations} from \"../SortingAlgorithms/quickSort\";\r\nimport {getBeadSortAnimations} from \"../SortingAlgorithms/beadSort\";\r\nimport {getInsertionSortAnimations} from \"../SortingAlgorithms/insertionSort\";\r\nimport {getselectionSortAnimations} from \"../SortingAlgorithms/selectionSort\";\r\nimport React from \"react\";\r\nimport './sortingAnimations.css';\r\n\r\nconst PRIMARY_COLOR = '#428bca';\r\nconst SECONDARY_COLOR = '#150855';\r\nconst SPEED = 0.7;\r\nconst NUMBER_OF_ARRAY_BARS = Math.floor(window.innerWidth * 0.25);\r\nconst MAX_HEIGHT = Math.floor(window.innerHeight * 0.7);\r\n\r\nconst SORTING_ALGORITHMS = [\"Merge Sort\", \"Quick Sort\", \"Selection Sort\", \"Insertion Sort\", \"Bead (Gravity) Sort\"];\r\n\r\n// Referenced and modified from Youtube video https://www.youtube.com/watch?v=pFXYym4Wbkc\r\n// and github source code:\r\n// https://github.com/clementmihailescu/Sorting-Visualizer-Tutorial/blob/master/src/SortingVisualizer/SortingVisualizer.jsx\r\n\r\nexport default class SortingVisualizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.initArray();\r\n    }\r\n\r\n    initArray() {\r\n        const array = [];\r\n        for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\r\n            array.push(randomIntFromInterval(5, MAX_HEIGHT));\r\n        }\r\n        this.setState({array});\r\n    }\r\n\r\n    resetArray(){\r\n        window.location.reload(true);\r\n    }\r\n\r\n    animateSorting() {\r\n        let animations = [];\r\n        switch (document.getElementById('algorithm').value) {\r\n            case \"Merge Sort\":\r\n                // Divide & Conquer by splitting in half always\r\n                animations = getMergeSortAnimations(this.state.array);\r\n                break;\r\n            case \"Quick Sort\":\r\n                // Divide & Conquer by splitting both sides of a pivot that is now at the right position\r\n                animations = getQuickSortAnimations(this.state.array);\r\n                break;\r\n            case \"Selection Sort\":\r\n                // Find the smallest/largest number and through it to the front/back\r\n                animations = getselectionSortAnimations(this.state.array);\r\n                break;\r\n            case \"Insertion Sort\":\r\n                // One by one, find where each number goes and place it there\r\n                animations = getInsertionSortAnimations(this.state.array);\r\n                break;\r\n            case \"Bead (Gravity) Sort\":\r\n                // Abacus algorithm, push everything to the right\r\n                animations = getBeadSortAnimations(this.state.array);\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n\r\n        for (let i = 0; i < animations.length; i++) {\r\n            const arrayBars = document.getElementsByClassName('array-bar');\r\n            let action = animations[i].action;\r\n\r\n            if (action === 'compare') {\r\n                const barOneIdx = animations[i].indOne;\r\n                const barTwoIdx = animations[i].indTwo;\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = SECONDARY_COLOR;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * SPEED);\r\n            } else if (action === 'normal') {\r\n                const barOneIdx = animations[i].indOne;\r\n                const barTwoIdx = animations[i].indTwo;\r\n                const barOneStyle = arrayBars[barOneIdx].style;\r\n                const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                const color = PRIMARY_COLOR;\r\n                setTimeout(() => {\r\n                    barOneStyle.backgroundColor = color;\r\n                    barTwoStyle.backgroundColor = color;\r\n                }, i * SPEED);\r\n            } else if (action === 'newHeight') {\r\n                setTimeout(() => {\r\n                    const barOneIdx = animations[i].indOne;\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    barOneStyle.height = `${animations[i].heightOne}px`;\r\n                }, i * SPEED);\r\n            } else if (action === 'swap') {\r\n                setTimeout(() => {\r\n                    const barOneIdx = animations[i].indOne;\r\n                    const barTwoIdx = animations[i].indTwo;\r\n                    const barOneStyle = arrayBars[barOneIdx].style;\r\n                    const barTwoStyle = arrayBars[barTwoIdx].style;\r\n                    barOneStyle.height = `${animations[i].heightOne}px`;\r\n                    barTwoStyle.height = `${animations[i].heightTwo}px`;\r\n                }, i * SPEED);\r\n            }\r\n        }\r\n    }\r\n\r\n    createSelection() {\r\n        let select = []\r\n        for (let i = 0; i < SORTING_ALGORITHMS.length; i++) {\r\n            select.push(<option value={SORTING_ALGORITHMS[i]}>{SORTING_ALGORITHMS[i]}</option>)\r\n        }\r\n        return select\r\n    }\r\n\r\n    render() {\r\n        const {array} = this.state;\r\n\r\n        return (\r\n            <div>\r\n                <h1> Visualize Sorting Algorithms at Work</h1>\r\n                <button onClick={() => this.resetArray()}>Generate New Array</button>\r\n                <label>Select Sorting Algorithm: </label>\r\n                <select className=\"m-2\" id=\"algorithm\">\r\n                    {this.createSelection()}\r\n                </select>\r\n                <button onClick={() => this.animateSorting()}>Start Sort</button>\r\n                <div className=\"array-container\">\r\n                    {array.map((value, idx) => (\r\n                        <div\r\n                            className=\"array-bar\"\r\n                            key={idx}\r\n                            style={{\r\n                                backgroundColor: PRIMARY_COLOR,\r\n                                height: `${value}px`,\r\n                            }}>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction randomIntFromInterval(min, max) {\r\n    // min and max included\r\n    return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n","export function getselectionSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    selectionSortHelper(array, animations);\r\n    return animations;\r\n}\r\n\r\nfunction selectionSortHelper(\r\n    mainArray,\r\n    animations,\r\n) {\r\n    for (let i = mainArray.length - 1; i >= 0; i--) {\r\n        let maxIndex = i;\r\n        for (let j = i; j >= 0; j--) {\r\n            animations.push({action: 'compare', indOne: j, indTwo: maxIndex});\r\n            animations.push({action: 'normal', indOne: j, indTwo: maxIndex});\r\n            if (mainArray[j] > mainArray[maxIndex]) {\r\n                maxIndex = j;\r\n            }\r\n        }\r\n        animations.push({\r\n            action: 'swap',\r\n            indOne: i,\r\n            indTwo: maxIndex,\r\n            heightOne: mainArray[maxIndex],\r\n            heightTwo: mainArray[i]\r\n        });\r\n        let temp = mainArray[i];\r\n        mainArray[i] = mainArray[maxIndex];\r\n        mainArray[maxIndex] = temp;\r\n    }\r\n\r\n}","export function getInsertionSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    sortHelper(array, animations);\r\n    return animations;\r\n}\r\n\r\nfunction sortHelper(\r\n    mainArray,\r\n    animations,\r\n) {\r\n    for (let i = 1; i < mainArray.length; i++) {\r\n        let key = mainArray[i];\r\n        let j = i - 1;\r\n        while (j >= 0 && key < mainArray[j]) {\r\n            animations.push({action: 'compare', indOne: j, indTwo: i});\r\n            animations.push({action: 'normal', indOne: j, indTwo: i});\r\n            animations.push({action: 'newHeight', indOne: j + 1, heightOne: mainArray[j]});\r\n            mainArray[j + 1] = mainArray[j];\r\n            j--;\r\n        }\r\n\r\n        animations.push({\r\n            action: 'newHeight',\r\n            indOne: j + 1,\r\n            heightOne: key\r\n        });\r\n        mainArray[j + 1] = key;\r\n    }\r\n\r\n}","export function getBeadSortAnimations(array) {\r\n    const animations = [];\r\n    if (array.length <= 1) return array;\r\n    beadSortHelper(array, animations);\r\n    return animations;\r\n}\r\n\r\nfunction beadSortHelper(\r\n    mainArray,\r\n    animations,\r\n) {\r\n    let max = mainArray[0];\r\n    let animateBeads = [];\r\n    for (let i = 1; i < mainArray.length; i++) {\r\n        if (mainArray[i] > max) {\r\n            max = mainArray[i];\r\n        }\r\n    }\r\n    let BEAD = [];\r\n    for (let i = 0; i < mainArray.length; i++) {\r\n        BEAD[i] = [];\r\n        for (let j = 0; j < mainArray[i]; j++) {\r\n            BEAD[i][j] = 1;\r\n        }\r\n        for (let j = mainArray[i]; j < max; j++) {\r\n            BEAD[i][j] = 0;\r\n        }\r\n    }\r\n    for (let j = 0; j < max - 1; j++) {\r\n        for (let i = mainArray.length - 1; i >= 0; i--) {\r\n            // if there's room, get beads from the closet left column with beads\r\n            if (BEAD[i][j] === 0 && ((j > 0 && BEAD[i][j - 1] === 1) || j === 0)) {\r\n                let x = i;\r\n                while (x > 0 && BEAD[x][j] === 0) {\r\n                    x--;\r\n                }\r\n                let y = j;\r\n                while (y < max && BEAD[x][y] === 1) {\r\n                    y++;\r\n                }\r\n                for (let k = j; k < y; k++) {\r\n                    BEAD[i][k] = 1;\r\n                    BEAD[x][k] = 0;\r\n                }\r\n                animateBeads.push({ind: i, h: y});\r\n                let isLowest = true;\r\n                if (x > 0 && BEAD[x - 1][j] === 0) {\r\n                    for (let k = mainArray.length - 1; k > 0; k--) {\r\n                        if (BEAD[k][j] === 1)\r\n                            isLowest = false;\r\n                    }\r\n                    if (isLowest)\r\n                        animateBeads.push({ind: x, h: j});\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    animateBeads.forEach(function (m) {\r\n        animations.push({action: 'newHeight', indOne: m.ind, heightOne: m.h});\r\n        animations.push([m.ind, m.h]);\r\n    });\r\n}","export function getA_StarAnimations(squares) {\r\n    const animations = [];\r\n    if (squares.length <= 1) return animations;\r\n    pathHelper(squares, animations);\r\n    return animations;\r\n}\r\n\r\nfunction pathHelper(squares, animations) {\r\n    let start = squares.filter(function (ele) {\r\n        if (ele.isA === 'start') {\r\n            return ele;\r\n        } else {\r\n            return null;\r\n        }\r\n    })[0];\r\n    let end = squares.filter(function (ele) {\r\n        if (ele.isA === 'end') {\r\n            return ele;\r\n        } else {\r\n            return null;\r\n        }\r\n    })[0];\r\n    start.gScore = 0;\r\n    start.fScore = heuristic(start, end);\r\n    let openSet = [];\r\n    openSet.push(start);\r\n    let previous = start;\r\n    while (openSet.length > 0) {\r\n        let current = openSet[0];\r\n        for (let i = 1; i < openSet.length; i++) {\r\n            if (openSet[i].fScore < current.fScore) {\r\n                current = openSet[i];\r\n            }\r\n        }\r\n        if (current.previous !== previous && current !== start) {\r\n            findLastCommonPoint(current, previous, animations);\r\n        }\r\n        if (current !== start && current !== end) {\r\n            current.isA = 'path';\r\n            animations.push({action: 'newPath', square: current});\r\n        }\r\n        previous = current;\r\n        if (current === end) {\r\n            return;\r\n        }\r\n        openSet = arrayRemove(openSet, current);\r\n        let neighbours = [];\r\n        for (let i = -1; i < 2; i++) {\r\n            for (let j = -1; j < 2; j++) {\r\n                let neighbour = squares.filter(function (ele) {\r\n                    if (ele.x === current.x + i && ele.y === current.y + j\r\n                        && (ele.isA === 'free' || ele.isA === 'end' || ele.isA === 'wall')\r\n                    ) {\r\n                        return ele;\r\n                    } else {\r\n                        return null;\r\n                    }\r\n                })[0];\r\n                if (!neighbour) {\r\n                    neighbour = {isA: 'offMap'};\r\n                }\r\n                neighbours.push(neighbour);\r\n            }\r\n        }\r\n        if (neighbours[1].isA === 'wall' && neighbours[3].isA === 'wall') {\r\n            neighbours[0].isA = 'wall';\r\n        }\r\n        if (neighbours[1].isA === 'wall' && neighbours[5].isA === 'wall') {\r\n            neighbours[2].isA = 'wall';\r\n        }\r\n        if (neighbours[3].isA === 'wall' && neighbours[7].isA === 'wall') {\r\n            neighbours[6].isA = 'wall';\r\n        }\r\n        if (neighbours[5].isA === 'wall' && neighbours[7].isA === 'wall') {\r\n            neighbours[8].isA = 'wall';\r\n        }\r\n\r\n        let possibilities = [];\r\n        for (let i = 0; i < neighbours.length; i++) {\r\n            if (neighbours[i].isA !== \"wall\" && neighbours[i].isA !== \"offMap\") {\r\n                possibilities.push(neighbours[i]);\r\n            }\r\n        }\r\n\r\n        for (let i = 0; i < possibilities.length; i++) {\r\n            let neighbour = possibilities[i];\r\n            let tempScore = current.gScore + weight(current, neighbour, end);\r\n            if (!neighbour.gScore || tempScore < neighbour.gScore) {\r\n                neighbour.gScore = tempScore;\r\n                neighbour.fScore = tempScore + heuristic(neighbour, end);\r\n                neighbour.previous = current;\r\n                if (!openSet.includes(neighbour)) {\r\n                    openSet.push(neighbour);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let failure = squares.filter(function (ele) {\r\n        if (ele.isA === 'path') {\r\n            return ele;\r\n        } else {\r\n            return null;\r\n        }\r\n    });\r\n    for (let i = 0; i < failure.length; i++) {\r\n        animations.push({action: 'failure', square: failure[i]});\r\n    }\r\n}\r\n\r\nfunction heuristic(position, end) {\r\n    let x1 = position.x;\r\n    let y1 = position.y;\r\n    let x2 = end.x;\r\n    let y2 = end.y;\r\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\r\n    // return Math.abs((x2 - x1)) + Math.abs((y2 - y1));\r\n}\r\n\r\nfunction arrayRemove(arr, value) {\r\n    return arr.filter(function (ele) {\r\n        return ele !== value;\r\n    });\r\n}\r\n\r\nfunction weight(current, neighbour, end) {\r\n    let w;\r\n    if (end.x === neighbour.x || end.y === neighbour.y) {\r\n        w = 1;\r\n    } else if (current.x === neighbour.x || current.y === neighbour.y) {\r\n        w = 1;\r\n    } else {\r\n        w = 1.2;\r\n    }\r\n    return w;\r\n}\r\n\r\nfunction findLastCommonPoint(current, previous, animations) {\r\n    let oldPath = [];\r\n    let newPath = [];\r\n    let old = previous;\r\n    let newTop = current;\r\n    while (previous) {\r\n        oldPath.push(previous);\r\n        previous = previous.previous\r\n    }\r\n    while (current) {\r\n        newPath.push(current);\r\n        current = current.previous\r\n    }\r\n\r\n    let commonElements = newPath.filter(value => oldPath.includes(value));\r\n    while (!commonElements.includes(old)) {\r\n        animations.push({action: 'visit', square: old});\r\n        old = old.previous;\r\n    }\r\n    let rebuildPath = [];\r\n    while (!commonElements.includes(newTop)) {\r\n        rebuildPath.unshift(newTop);\r\n        newTop = newTop.previous;\r\n    }\r\n    for (let i = 0; i < rebuildPath.length; i++) {\r\n        animations.push({action: 'rebuild', square: rebuildPath[i]});\r\n    }\r\n}","import React from \"react\";\r\nimport './pathFindingAnimations.css';\r\nimport {getA_StarAnimations} from \"../PathFindingAlgorithms/aStar\";\r\n\r\nconst PRIMARY_COLOR = '#e7e4e4';\r\nconst START_COLOR = 'rgb(3,253,77)';\r\nconst END_COLOR = '#c925e7';\r\nconst WALL_COLOR = '#000000';\r\nconst PATH_COLOR = '#428bca';\r\nconst VISITED_COLOR = 'rgba(213,48,48,0.47)';\r\nconst FAILURE_COLOR = 'rgb(255,0,0)';\r\n\r\nconst SPEED = 5;\r\nconst PROB_OF_WALL = 0.25;\r\nconst NUMBER_OF_BOXES_WIDTH = Math.floor(window.innerWidth * 0.1);\r\nconst NUMBER_OF_BOXES_HEIGHT = Math.floor(window.innerHeight * 0.09);\r\nconst BOX_DIM = 6;\r\nconst MARGIN = 2;\r\n\r\nconst ALGORITHMS = [\"A*\"];\r\n\r\n\r\nexport default class PathFindingVisualizer extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            grid: [],\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.resetGrid();\r\n    }\r\n\r\n    resetGrid() {\r\n        const grid = [];\r\n        // let points = generateTwoUniquePoints();\r\n        // let start = {isA: 'start', x: points.startX, y: points.startY};\r\n        // let end = {isA: 'end', x: points.endX, y: points.endY};\r\n        let start = {isA: 'start', x: 0, y: 0};\r\n        let end = {isA: 'end', x: NUMBER_OF_BOXES_WIDTH - 1, y: NUMBER_OF_BOXES_HEIGHT - 1};\r\n        for (let i = 0; i < NUMBER_OF_BOXES_WIDTH; i++) {\r\n            for (let j = 0; j < NUMBER_OF_BOXES_HEIGHT; j++) {\r\n                if (!((i === start.x && j === start.y) || (i === end.x && j === end.y))) {\r\n                    if (Math.random() < PROB_OF_WALL) {\r\n                        grid.push({isA: 'wall', x: i, y: j});\r\n                    } else {\r\n                        grid.push({isA: 'free', x: i, y: j});\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        grid.push(start);\r\n        grid.push(end);\r\n        this.setState({grid});\r\n    }\r\n\r\n    resetPath(){\r\n        window.location.reload(true);\r\n    }\r\n\r\n    animatePath() {\r\n        let animations = [];\r\n        switch (document.getElementById('algorithm').value) {\r\n            case \"A*\":\r\n                animations = getA_StarAnimations(this.state.grid);\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n        for (let i = 0; i < animations.length; i++) {\r\n            let action = animations[i].action;\r\n            const square = animations[i].square;\r\n            const gridSquareID = (square.y * NUMBER_OF_BOXES_WIDTH) + square.x + 1;\r\n            const gridSquare = document.getElementById(gridSquareID);\r\n            const gridSquareStyle = gridSquare.style;\r\n            if (action === 'newPath') {\r\n                setTimeout(() => {\r\n                    gridSquareStyle.backgroundColor = PATH_COLOR;\r\n                }, i * SPEED);\r\n            } else if (action === 'visit') {\r\n                setTimeout(() => {\r\n                    gridSquareStyle.backgroundColor = VISITED_COLOR;\r\n                }, i * SPEED);\r\n            } else if (action === 'failure') {\r\n                setTimeout(() => {\r\n                    gridSquareStyle.backgroundColor = FAILURE_COLOR;\r\n                }, i * SPEED);\r\n            } else if (action === 'rebuild') {\r\n                setTimeout(() => {\r\n                    gridSquareStyle.backgroundColor = PATH_COLOR;\r\n                }, i * SPEED);\r\n            }\r\n        }\r\n    }\r\n\r\n    createSelection() {\r\n        let select = []\r\n        for (let i = 0; i < ALGORITHMS.length; i++) {\r\n            select.push(<option value={ALGORITHMS[i]}>{ALGORITHMS[i]}</option>)\r\n        }\r\n        return select\r\n    }\r\n\r\n    renderTheGrid(grid) {\r\n        let y = grid.y * (BOX_DIM + MARGIN)\r\n        let x = grid.x * (BOX_DIM + MARGIN)\r\n        let key = (grid.y * NUMBER_OF_BOXES_WIDTH) + grid.x + 1;\r\n        let color;\r\n        switch (grid.isA) {\r\n            case 'free':\r\n                color = PRIMARY_COLOR;\r\n                break;\r\n            case 'wall':\r\n                color = WALL_COLOR;\r\n                break;\r\n            case 'start':\r\n                color = START_COLOR;\r\n                break;\r\n            case 'end':\r\n                color = END_COLOR;\r\n                break;\r\n            default:\r\n                color = PRIMARY_COLOR;\r\n                break;\r\n        }\r\n        return <div\r\n            className=\"grid-square\"\r\n            id={key}\r\n            style={{\r\n                backgroundColor: color,\r\n                top: `${y}px`,\r\n                left: `${x}px`,\r\n                width: `${BOX_DIM}px`,\r\n                height: `${BOX_DIM}px`,\r\n                margin: `${MARGIN}px`,\r\n            }}>\r\n        </div>\r\n    }\r\n\r\n    render() {\r\n        const {grid} = this.state;\r\n        return (\r\n            <div>\r\n                <h1> Visualize Path Finding Algorithms at Work</h1>\r\n                <button onClick={() => this.resetPath()}>Generate New Grid</button>\r\n                <label>Select Path Finding Algorithm: </label>\r\n                <select className=\"m-2\" id=\"algorithm\">\r\n                    {this.createSelection()}\r\n                </select>\r\n                <button onClick={() => this.animatePath()}>Find Path</button>\r\n                <div className=\"array-container\">\r\n                    {grid.map(g => this.renderTheGrid(g))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// function generateTwoUniquePoints() {\r\n//     let min = 0;\r\n//     let xS = [];\r\n//     let yS = [];\r\n//     let points;\r\n//     for (let i = 0; i < 2; i++) {\r\n//         xS.push(Math.floor(Math.random() * (NUMBER_OF_BOXES_WIDTH - min) + min));\r\n//         yS.push(Math.floor(Math.random() * (NUMBER_OF_BOXES_HEIGHT - min) + min));\r\n//     }\r\n//     if (xS[0] === xS[1] && yS[0] === yS[1]) {\r\n//         points = generateTwoUniquePoints();\r\n//     } else {\r\n//         points = {startX: xS[0], startY: yS[0], endX: xS[1], endY: yS[1]};\r\n//     }\r\n//     return points;\r\n// }","import React from \"react\";\r\nimport \"./drawingArea.css\";\r\nimport Immutable from 'immutable';\r\n\r\n//Reference for drawing area\r\n//https://pspdfkit.com/blog/2017/how-to-build-free-hand-drawing-using-react/\r\nexport default class DrawArea extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            lines: new Immutable.List(),\r\n            isDrawing: false\r\n        };\r\n\r\n        this.handleMouseDown = this.handleMouseDown.bind(this);\r\n        this.handleMouseMove = this.handleMouseMove.bind(this);\r\n        this.handleMouseUp = this.handleMouseUp.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener(\"mouseup\", this.handleMouseUp);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener(\"mouseup\", this.handleMouseUp);\r\n    }\r\n\r\n    handleMouseDown(mouseEvent) {\r\n        if (mouseEvent.button !== 0) {\r\n            return;\r\n        }\r\n\r\n        const point = this.relativeCoordinatesForEvent(mouseEvent);\r\n\r\n        this.setState(prevState => ({\r\n            lines: prevState.lines.push(new Immutable.List([point])),\r\n            isDrawing: true\r\n        }));\r\n    }\r\n\r\n    handleMouseMove(mouseEvent) {\r\n        if (!this.state.isDrawing) {\r\n            return;\r\n        }\r\n\r\n        const point = this.relativeCoordinatesForEvent(mouseEvent);\r\n\r\n        this.setState(prevState => ({\r\n            lines: prevState.lines.updateIn([prevState.lines.size - 1], line => line.push(point))\r\n        }));\r\n    }\r\n\r\n    handleMouseUp() {\r\n        this.setState({isDrawing: false});\r\n    }\r\n\r\n    relativeCoordinatesForEvent(mouseEvent) {\r\n        const boundingRect = this.refs.drawArea.getBoundingClientRect();\r\n        return new Immutable.Map({\r\n            x: mouseEvent.clientX - boundingRect.left,\r\n            y: mouseEvent.clientY - boundingRect.top,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className=\"drawArea\"\r\n                ref=\"drawArea\"\r\n                onMouseDown={this.handleMouseDown}\r\n                onMouseMove={this.handleMouseMove}\r\n            >\r\n                <Drawing lines={this.state.lines}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Drawing({lines}) {\r\n    return (\r\n        <svg className=\"drawing\">\r\n            {lines.map((line, index) => (\r\n                <DrawingLine key={index} line={line}/>\r\n            ))}\r\n        </svg>\r\n    );\r\n}\r\n\r\nfunction DrawingLine({line}) {\r\n    const pathData = \"M \" +\r\n        line\r\n            .map(p => {\r\n                return `${p.get('x')} ${p.get('y')}`;\r\n            })\r\n            .join(\" L \");\r\n\r\n    return <path className=\"path\" d={pathData}/>;\r\n}","// Coding Challenge 130.1: Drawing with Fourier Transform and Epicycles\r\n// Daniel Shiffman\r\n// https://thecodingtrain.com/CodingChallenges/130-fourier-transform-drawing.html\r\n// https://youtu.be/MY4luNgGfms\r\n// https://editor.p5js.org/codingtrain/sketches/jawHqwfda\r\n\r\nexport default function dft(x) {\r\n  const X = [];\r\n  const N = x.length;\r\n  for (let k = 0; k < N; k++) {\r\n    let re = 0;\r\n    let im = 0;\r\n    for (let n = 0; n < N; n++) {\r\n      const phi = (2 * Math.PI * k * n) / N;\r\n      re += x[n] * Math.cos(phi);\r\n      im -= x[n] * Math.sin(phi);\r\n    }\r\n    re = re / N;\r\n    im = im / N;\r\n\r\n    let freq = k;\r\n    let amp = Math.sqrt(re * re + im * im);\r\n    let phase = Math.atan2(im, re);\r\n    X[k] = { re, im, freq, amp, phase };\r\n  }\r\n  return X;\r\n}","import React from \"react\";\r\nimport DrawArea from \"./drawingArea\";\r\nimport dft from \"./fourierTransform\";\r\n\r\nconst HEIGHT = 500;\r\nconst WIDTH = window.innerWidth;\r\nconst SPEED = 50;\r\nconst Y_OFFSET = HEIGHT * 3 / 10;\r\nconst X_OFFSET = WIDTH * 3 / 20;\r\n\r\nexport default class FourierDrawings extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            drawing: [],\r\n            animations: []\r\n        };\r\n\r\n        this.startFourier = this.startFourier.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    drawRef = React.createRef();\r\n\r\n\r\n    renderFourier() {\r\n        const Fourier = [];\r\n        for (let i = 0; i < this.state.animations.length; i++) {\r\n            Fourier.push(this.state.animations[i]);\r\n        }\r\n        return Fourier;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Fourier Transform Drawings</h1>\r\n                <button onClick={() => this.resetDrawing()}>Reset Sketch</button>\r\n                <button onClick={() => this.startFourier()}>Start Fourier</button>\r\n                <div>\r\n                    <div>\r\n                        <span>Draw Area</span>\r\n                        <span>Fourier Area</span>\r\n                    </div>\r\n                    <DrawArea ref={this.drawRef}/>\r\n                    <div>\r\n                        <svg id=\"fourierArea\" className=\"fourierArea\">\r\n                            <rect x={X_OFFSET} y={Y_OFFSET} width={WIDTH * 0.33} height=\"300\" stroke=\"black\"\r\n                                  strokeWidth=\"1\" fill=\"none\"/>\r\n                            {this.renderFourier()}\r\n                        </svg>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    resetDrawing() {\r\n        window.location.reload(true);\r\n    }\r\n\r\n    startFourier() {\r\n        let drawing = this.getDrawing();\r\n        let path = [];\r\n        let frame = 0;\r\n        for (let i = 0; i < drawing.length; i++) {\r\n            let time = 0;\r\n            const dt = Math.PI * 2 / drawing[i].FY.length;\r\n            path[i] = [];\r\n            while (time < 2 * Math.PI - dt) {\r\n                let svgRender = []\r\n                let epiCyclesX = this.epiCycles(X_OFFSET, 50, 0, drawing[i].FX, time);\r\n                let epiCyclesY = this.epiCycles(40, Y_OFFSET, Math.PI / 2, drawing[i].FY, time);\r\n                let point = {x: epiCyclesX.x, y: epiCyclesY.y};\r\n                path[i].push(point);\r\n                time += dt;\r\n                svgRender.push(epiCyclesX.cycles);\r\n                svgRender.push(epiCyclesY.cycles);\r\n                if (time < 2 * Math.PI - dt) {\r\n                    svgRender.push(<line x1={epiCyclesX.x} y1={epiCyclesX.y} x2={point.x} y2={point.y}\r\n                                         stroke=\"black\" strokeWidth=\"1\"/>);\r\n                    svgRender.push(<line x1={epiCyclesY.x} y1={epiCyclesY.y} x2={point.x} y2={point.y}\r\n                                         stroke=\"black\" strokeWidth=\"1\"/>);\r\n                }\r\n                for (let j = 0; j < path.length; j++) {\r\n                    let line = \"M \" + path[j][0].x + \" \" + path[j][0].y;\r\n                    for (let k = 1; k < path[j].length; k++) {\r\n                        line += \" L \" + path[j][k].x + \" \" + path[j][k].y;\r\n                    }\r\n                    // let color = '#' + Math.floor(Math.random() * 16777215).toString(16);\r\n                    let color = \"black\";\r\n                    svgRender.push(<path d={line} stroke={color} strokeWidth=\"1\" fill=\"none\"/>);\r\n                }\r\n                setTimeout(() => {\r\n                    this.setState({animations: svgRender});\r\n                }, frame * SPEED);\r\n                frame++;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    epiCycles(x, y, rotation, fourier, time) {\r\n        let cycles = [];\r\n        for (let i = 0; i < fourier.length; i++) {\r\n            let prevX = x;\r\n            let prevY = y;\r\n            let freq = fourier[i].freq;\r\n            let radius = fourier[i].amp;\r\n            let phase = fourier[i].phase;\r\n            x += radius * Math.cos(freq * time + phase + rotation);\r\n            y += radius * Math.sin(freq * time + phase + rotation);\r\n            if (i !== 0) {\r\n                cycles.push(<circle cx={prevX} cy={prevY} r={radius} stroke=\"black\" strokeWidth=\"1\" fill=\"white\"/>);\r\n                cycles.push(<line x1={prevX} y1={prevY} x2={x} y2={y} stroke=\"black\" strokeWidth=\"1\"/>);\r\n            }\r\n        }\r\n        return {x: x, y: y, cycles: cycles};\r\n    }\r\n\r\n    getDrawing() {\r\n        let drawing = [];\r\n        // console.log(this.drawRef.current.state)\r\n        if (!this.drawRef.current.state.lines._tail) {\r\n            return [];\r\n        }\r\n        const lines = this.drawRef.current.state.lines._tail.array;\r\n        // console.log(lines)\r\n        for (let i = 0; i < lines.length; i++) {\r\n            let x = [];\r\n            let y = [];\r\n            if (lines[i]._root) {\r\n                let root = lines[i]._root.array\r\n                for (let j = 0; j < root.length; j++) {\r\n                    for (let k = 0; k < root[j].array.length; k++) {\r\n                        x.push(root[j].array[k]._root.entries[0][1]);\r\n                        y.push(root[j].array[k]._root.entries[1][1]);\r\n                    }\r\n                }\r\n            }\r\n            let points = lines[i]._tail.array;\r\n            for (let j = 0; j < points.length; j++) {\r\n                x.push(points[j]._root.entries[0][1]);\r\n                y.push(points[j]._root.entries[1][1]);\r\n                // console.log('x:' + points[j]._root.entries[0][1] + ', ' +  'y: ' + points[j]._root.entries[1][1]);\r\n            }\r\n            let fourierX = dft(x);\r\n            let fourierY = dft(y);\r\n            fourierX.sort((a, b) => b.amp - a.amp);\r\n            fourierY.sort((a, b) => b.amp - a.amp);\r\n            drawing.push({FX: fourierX, FY: fourierY});\r\n        }\r\n        // console.log(drawing);\r\n        this.setState({drawing: drawing});\r\n        return drawing;\r\n    }\r\n}","export default function Rocket(startingY, dnaSize, dna) {\r\n    const START_Y = startingY;\r\n    this.dnaSize = dnaSize;\r\n    this.frame = 0;\r\n    this.pos = {x: 0, y: startingY};\r\n    this.velocity = {x: 0, y: 0};\r\n    this.acceleration = {x: 0, y: 0};\r\n    this.strength = 0;\r\n\r\n    this.crashed = false;\r\n    this.landed = false;\r\n    this.lastFrame = 1;\r\n\r\n    if (dna) {\r\n        this.dna = dna;\r\n    } else {\r\n        this.dna = [];\r\n        for (let i = 0; i < dnaSize; i++) {\r\n            this.dna.push(randomGene());\r\n        }\r\n    }\r\n\r\n    this.applyForce = function () {\r\n        let index = this.frame;\r\n        this.acceleration.x += this.dna[index].x;\r\n        this.acceleration.y += this.dna[index].y;\r\n\r\n        this.velocity.x += this.acceleration.x;\r\n        this.velocity.y += this.acceleration.y;\r\n\r\n        this.pos.x += this.velocity.x;\r\n        this.pos.y += this.velocity.y;\r\n        this.frame++;\r\n    }\r\n\r\n    this.makeChild = function (otherRocket) {\r\n        let newDNA = [];\r\n        for (let i = 0; i < this.dnaSize; i++) {\r\n            // mutate gene 1% of the time\r\n            if (Math.random() < 0.01) {\r\n                newDNA.push(randomGene());\r\n            }\r\n            // if not mutated, get gene from one of the parents\r\n            else if (Math.random() > 0.5) {\r\n                newDNA.push(otherRocket.dna[i]);\r\n            } else {\r\n                newDNA.push((this.dna[i]));\r\n            }\r\n        }\r\n        return new Rocket(START_Y, this.dnaSize, newDNA);\r\n    }\r\n\r\n    this.updatePosition = function (obstacles, bounds) {\r\n        if (!this.landed && !this.crashed) {\r\n            //check if crashed or landed with obstacles and bounds\r\n            for (let i = 0; i < obstacles.length; i++) {\r\n                let o = obstacles[i];\r\n                if (this.pos.x < (o.x + o.width) && this.pos.x > (o.x - o.width)\r\n                    && this.pos.y < (o.y + o.height) && this.pos.y > (o.y - o.height)) {\r\n                    this.crashed = true;\r\n                }\r\n            }\r\n            if (this.pos.x >= (bounds.finish.x - bounds.finish.radius / 1.3)\r\n                && this.pos.y >= (bounds.finish.y - bounds.finish.radius / 1.3)\r\n                && this.pos.y <= (bounds.finish.y + bounds.finish.radius / 1.3)) {\r\n                this.landed = true;\r\n                this.lastFrame = this.frame;\r\n            }\r\n            if (!this.landed && (this.pos.x + 10 <= bounds.left || this.pos.x >= bounds.right || this.pos.y <= bounds.top || this.pos.y + 10 >= bounds.bottom)) {\r\n                this.crashed = true;\r\n                this.lastFrame = this.frame;\r\n            }\r\n            // after checking if still not crashed or landed\r\n            this.applyForce();\r\n        }\r\n        let multiplier = this.frame;\r\n        if (this.landed) {\r\n            multiplier = this.frame * 10 * (this.dnaSize - this.lastFrame);\r\n        }\r\n        if (this.crashed) {\r\n            multiplier = this.lastFrame/10;\r\n        }\r\n        let distanceX = this.pos.x - bounds.finish.x;\r\n        let distanceY = this.pos.y - bounds.finish.y;\r\n        this.strength = multiplier / (distanceX * distanceX + distanceY * distanceY);\r\n    }\r\n}\r\n\r\n\r\n// keep genes bounded between min and max\r\nfunction randomGene() {\r\n    let min = -0.0005;\r\n    let max = 0.0005;\r\n    return {x: Math.random() * (max - min) + min * 0.99, y: Math.random() * (max - min) + min};\r\n}","import React from \"react\";\r\nimport \"./rocketArea.css\"\r\nimport Rocket from \"./Rocket\";\r\n\r\nconst HEIGHT = 500;\r\nconst WIDTH = window.innerWidth * 0.9;\r\n\r\nconst NUMBER_OF_OBSTACLES = 15;\r\nconst NUMBER_OF_ROCKETS = 30;\r\n\r\nconst SPEED = 5;\r\nconst NUMBER_OF_FRAMES = 800;\r\n\r\nexport default class SmartRockets extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let rockets = [];\r\n        for (let i = 0; i < NUMBER_OF_ROCKETS; i++) {\r\n            rockets.push(new Rocket(HEIGHT / 2, NUMBER_OF_FRAMES))\r\n        }\r\n        this.state = {\r\n            population: {generation: 0, rockets: rockets},\r\n            obstacles: this.randomizeObstacles(),\r\n            finish: {x: WIDTH, y: HEIGHT / 2, radius: 100}\r\n        };\r\n\r\n        this.launchRockets = this.launchRockets.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    renderStuff() {\r\n        const stuff = [];\r\n        let obs = this.state.obstacles;\r\n        for (let i = 0; i < obs.length; i++) {\r\n            stuff.push(<ellipse cx={obs[i].x} cy={obs[i].y} rx={obs[i].width} ry={obs[i].height} fill=\"black\"\r\n                                stroke=\"grey\" strokeWidth=\"1\"/>)\r\n        }\r\n        let rockets = this.state.population.rockets;\r\n        for (let i = 0; i < rockets.length; i++) {\r\n            let percent = 0;\r\n            let percentDif = 1;\r\n            if (rockets[i].velocity.x !== 0) {\r\n                percent = rockets[i].velocity.x / (rockets[i].velocity.x + rockets[i].velocity.y);\r\n                percentDif = percent;\r\n            }\r\n            stuff.push(<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\"\r\n                            x={rockets[i].pos.x} y={rockets[i].pos.y}>\r\n                <path\r\n                    transform={\"translate(\" + 24 * percent + \", \" + -24 * (1 - percentDif) + \"), rotate(\" + 90 * percent + \")\"}\r\n                    d=\"M13.404 23h-2.808l-.96-2h4.728l-.96 2zm-8.323-7.365c-1.218 1.202-2.081 3.377-2.081 5.696 0 .884.127 1.789.405 2.669.255-1.837 1.122-3.2 3.162-3.773-.634-1.402-1.154-2.949-1.486-4.592zm13.83-.01c-.371 1.772-.92 3.333-1.477 4.602 2.039.573 2.906 1.936 3.161 3.773.278-.88.405-1.785.405-2.67 0-2.324-.867-4.504-2.089-5.705zm-6.926-15.625c-7.076 6.157-5.909 14.779-3.324 20h6.685c2.59-5.483 3.765-13.883-3.361-20zm.015 14c-.552 0-1-.448-1-1s.448-1 1-1 1 .448 1 1-.448 1-1 1zm0-4c-1.104 0-2-.896-2-2s.896-2 2-2 2 .896 2 2-.896 2-2 2z\"/>\r\n            </svg>);\r\n        }\r\n        let finish = this.state.finish;\r\n        stuff.push(<ellipse cx={finish.x} cy={finish.y} rx={finish.radius / 2} ry={finish.radius} fill=\"blue\"\r\n                            stroke=\"blue\" strokeWidth=\"1\"/>);\r\n        return stuff;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Generation Smart Rockets</h1>\r\n                <label>Generation: {this.state.population.generation}</label>\r\n                <button onClick={() => this.reset()}>Reset Rockets</button>\r\n                <button onClick={() => this.launchRockets()}>Launch Rockets</button>\r\n                <div>\r\n                    <svg className=\"rocketArea\">\r\n                        {this.renderStuff()}\r\n                    </svg>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    reset() {\r\n        window.location.reload(true);\r\n    }\r\n\r\n    getCurrentGeneration() {\r\n        let bounds = {left: 0, right: WIDTH, top: 0, bottom: HEIGHT, finish: this.state.finish};\r\n        let rockets = this.state.population.rockets;\r\n        for (let i = 0; i < rockets.length; i++) {\r\n            rockets[i].updatePosition(this.state.obstacles, bounds);\r\n        }\r\n        let newPopulation = {generation: this.state.population.generation, rockets: rockets};\r\n        return ({population: newPopulation});\r\n    }\r\n\r\n    launchRockets() {\r\n        for (let i = 0; i < NUMBER_OF_FRAMES; i++) {\r\n            setTimeout(() => {\r\n                this.setState(this.getCurrentGeneration());\r\n                if (i + 1 >= NUMBER_OF_FRAMES)\r\n                    this.updateGeneration();\r\n            }, i * SPEED);\r\n        }\r\n    }\r\n\r\n    randomizeObstacles() {\r\n        const obs = [];\r\n        for (let i = 0; i < NUMBER_OF_OBSTACLES; i++) {\r\n            let x = Math.random() * ((WIDTH * 0.9) - (WIDTH * 0.2) + 1) + (WIDTH * 0.20);\r\n            let y = Math.random() * ((HEIGHT * 0.9) - (HEIGHT * 0.1) + 1) + (HEIGHT * 0.1);\r\n            let width = Math.random() * 60 + 2;\r\n            let height = Math.random() * 60 + 2;\r\n            obs.push({x, y, width, height});\r\n        }\r\n        return obs;\r\n    }\r\n\r\n    updateGeneration() {\r\n        let matingPool = [];\r\n        let maxStrength = 0;\r\n        for (let i = 0; i < this.state.population.rockets.length; i++) {\r\n            if (this.state.population.rockets[i].strength > maxStrength)\r\n                maxStrength = this.state.population.rockets[i].strength;\r\n            if (this.state.population.rockets[i].strength < 1)\r\n                this.strength = 1;\r\n        }\r\n        for (let i = 0; i < this.state.population.rockets.length; i++) {\r\n            let r = this.state.population.rockets[i];\r\n            let s = 100 * r.strength / maxStrength;\r\n            for (let j = 0; j < s; j++) {\r\n                matingPool.push(r);\r\n            }\r\n        }\r\n        let newRockets = [];\r\n        for (let i = 0; i < NUMBER_OF_ROCKETS; i++) {\r\n            let parents = [Math.floor(Math.random() * matingPool.length), Math.floor(Math.random() * matingPool.length)];\r\n            newRockets.push(matingPool[parents[0]].makeChild(matingPool[parents[1]]));\r\n        }\r\n        this.setState({population: {generation: this.state.population.generation + 1, rockets: newRockets}});\r\n        this.launchRockets();\r\n    }\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from \"./navigationBar\";\r\nimport Home from \"./home\";\r\nimport SortingVisualizer from \"./Animations/sortingAnimations\";\r\nimport PathFindingVisualizer from \"./Animations/pathFindingAnimations\";\r\nimport FourierDrawings from \"./FourierTransforms/fourierTransformDrawings\";\r\nimport {Route} from \"react-router-dom\";\r\nimport SmartRockets from \"./RocketGenerations/SmartRockets\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <NavBar/>\r\n            <Route exact path=\"/\" component={Home}/>\r\n            <Route exact path=\"/sortingVisualization\" component={SortingVisualizer}/>\r\n            <Route exact path=\"/pathFindingVisualization\" component={PathFindingVisualizer}/>\r\n            <Route exact path=\"/fourierTransformDrawings\" component={FourierDrawings}/>\r\n            <Route exact path=\"/generationSmartRockets\" component={SmartRockets}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename={process.env.PUBLIC_URL}>< App /></BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}